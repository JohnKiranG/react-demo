{"version":3,"sources":["reducers/index.js","utils/action.js","actions/app.js","store/initialState.js","reducers/app.js","store/configureStore.js","components/chapter/RichTextEditor.js","components/chapter/Items.js","components/chapter/ChapterTarget.js","components/paragraph/RichTextEditor.js","components/paragraph/paragraph.js","components/Multimedia/imagePreview.js","components/Multimedia/audioPreview.js","components/Multimedia/videoPreview.js","components/Multimedia/preview.js","components/Multimedia/uploadFile.js","components/chapter/Data.js","components/chapter/ChapterSource.js","components/chapter/CreateChapter.js","App.js","serviceWorker.js","index.js"],"names":["history","utils_action","actionName","concat","TOGGLE_SIDEMENU","createActionType","SHOW_TOASTER_SUCCESS","DISPATCH_AND_ROUTE_REQUEST","DISPATCH_AND_ROUTE_SUCCESS","DISPATCH_AND_ROUTE_FAILURE","INDEX_PAGE_SIZE_OPTIONS","initialState","app","sidemenu","collapsed","loading","toaster","counter","count","isIncrementing","isDecrementing","placeholder","list","receivedAt","study","subject","visit","site","studySite","isStale","field","dashboard","zadeLoading","barChartLoading","barChartminiLoading","doubleLoopPieLoading","miniAreaChartLoading","studyList","totalSubjects","sitesCompliance","formsCompliance","dailySubmissionOfForms","totalSubmissions","subjectVisitForm","crfData","visitForm","user","id","token","name","userName","userOrgId","privileges","isLicensee","userOrgType","canAccessMultipleSites","userOrgName","title","email","logo","session","visitOid","client","clientName","form","fieldGroup","readOnly","data","studyTemplate","clientTemplate","visitFormEvent","studyCompliance","clientUser","role","crfVersion","tables","subjects","meta","page","pageSize","pageSizeOptions","pageTotal","total","subjectVisitForms","auditTrail","subjectMigration","deployToProd","versionInformation","forms","clinicalData","state","arguments","length","undefined","action","type","match","Object","objectSpread","createHistory","basename","process","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","createStore","combineReducers","router","connectRouter","RichTextEditor","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this$props","onContentStateChange","onEditorStateChange","editorState","react_default","a","createElement","react_draft_wysiwyg","toolbarClassName","wrapperClassName","toolbarOnFocus","editorClassName","editorStyle","minHeight","borderRadius","overflow","margin","lineHeight","wrapperStyle","marginTop","toolbar","options","inline","bold","className","italic","underline","code","superscript","subscript","fontSize","React","Component","Items","handleClick","e","modalComponent","componentName","showModal","onKeyDown","onHover","_this2","index","handleCancel","card","hoverable","col","span","onClick","offset","es_button","shape","icon","Target","onChange","pageNo","handlePageChange","setVisbility","setState","reorderVisbility","pageItems","currentPageNo","totalPages","deletePage","createNewPage","movePageLeft","movePageRight","pageEditorState","onPageEditorChange","onPageEditorStateChange","leftPageDisable","rightPageDisable","addPageDisable","style","paddingTop","row","es_form","Item","label","getFieldDecorator","rules","max","required","message","chapter_RichTextEditor","popconfirm","onConfirm","react_beautiful_dnd_esm","droppableId","provided","snapshot","ref","innerRef","isDraggingOver","background","textAlign","_","isEmpty","map","item","key","draggableId","provided1","snapshot1","assign","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","padding","chapter_Items","disabled","pagination","simple","defaultCurrent","current","imageUploadCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","onFocus","editorStateChange","image","component","popupClassName","urlEnabled","uploadEnabled","alignmentEnabled","uploadCallback","previewImage","inputAccept","alt","present","mandatory","defaultSize","height","width","FormItem","EditTemplate","modalOnEditorStateChange","ModalEditorState","onEditorChange","editorContent","_this$props$form","getFieldsValue","setFieldsValue","values","body","draftToHtml","trim","paragraphBody","modalOnEditorChange","_this$props$form2","modalParagraphBody","handleFocusEvent","document","activeElement","target","modalHandleFocusEvent","handleSubmit","preventDefault","validateFieldsAndScroll","err","console","log","previewModalVisible","handleModal","prevState","visible","EditorState","createEmpty","_this$state","tailItemLayout","wrapperCol","sm","bordered","labelCol","input","paragraph_RichTextEditor","color","paddingRight","gutter","marginRight","align","htmlType","modal","closable","onCancel","footer","destroyOnClose","paragraph","create","ImagePreview","src","defaultProps","AudioPreview","controls","VideoPreview","Preview","imagePreview","audioPreview","videoPreview","InputArea","uploadFile_FormItem","UploadFile","previewVisible","handlePreview","url","thumbUrl","handleChange","fileList","val","getFieldValue","resetFields","obj","uid","Math","random","push","uploadButton","uploadUrl","heigth","preview","upload","listType","onPreview","multiple","placement","uploadFile_InputArea","backgroundColor","MediaInput","PharseData","configData","Paragraph","Source","items","border","bodyStyle","data-type","Content","Sider","formItemLayout","rightPan","Array","from","v","k","reorder","startIndex","endIndex","result","_result$splice","splice","removed","slicedToArray","newID","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","droppableDestinationProp","add","CreateChapter","id2List","droppable","droppable2","getList","pages","onDragEnd","_this$state2","result1","onDrop","_this$state3","newComponentsList","_this$state4","newComponent","slice","moveCard","oldIndex","newIndex","_this$state5","remove","n","componentToMove","modifiedNewIndex","modalVisibility","hideModal","newPage","_this$state6","loPage1","_this$state7","newPageNo","newArray","filter","onChapterEditorChange","chapterTitle","onChapterEditorStateChange","chapterEditorState","pageTitle","selected","_this$state8","Val","layout","onSubmit","theme","ChapterSource","marginLeft","overflowX","ChapterTarget","onOk","top","CreateChapterForm","App","chapter_CreateChapter","Boolean","window","location","hostname","querySelector","ReactDOM","render","es","store","configureStore","esm","Switch","Route","path","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf9bf42a.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router'\nimport app from './app';\nexport default (history) => combineReducers({\n  router: connectRouter(history),\n  app,\n})\n","export default actionName => `EZPROUI/${actionName}`;\n","import { message } from 'antd';\n// eslint-disable-next-line\nimport { history } from '../store/configureStore';\nimport createActionType from '../utils/action';\n\nexport const TOGGLE_SIDEMENU = createActionType('TOGGLE_SIDEMENU');\nexport const SHOW_TOASTER_SUCCESS = createActionType('SHOW_TOASTER_SUCCESS');\nexport const DISPATCH_AND_ROUTE_REQUEST = createActionType('DISPATCH_AND_ROUTE_REQUEST');\nexport const DISPATCH_AND_ROUTE_SUCCESS = createActionType('DISPATCH_AND_ROUTE_SUCCESS');\nexport const DISPATCH_AND_ROUTE_FAILURE = createActionType('DISPATCH_AND_ROUTE_FAILURE');\n\n\nexport const toggleSidemenu = () => dispatch => {\n  dispatch({\n    type: TOGGLE_SIDEMENU,\n  });\n};\n\nconst showToasterSuccess = dispatch => dispatch({\n  type: SHOW_TOASTER_SUCCESS,\n});\n\nexport const showToaster = (toaster) => dispatch => {\n  if (toaster === 'CREATE_SUCCESS') {\n    message.success('Saved Successfully.', [2]);\n    showToasterSuccess(dispatch);\n  }\n  if (toaster === 'UPDATE_FAILURE') {\n    message.error('Failed to update the form.', [2]);\n    showToasterSuccess(dispatch);\n  }\n  if (toaster === 'UPDATE_SUCCESS') {\n    message.success('Updated Successfully.', [2]);\n    showToasterSuccess(dispatch);\n  }\n  if (toaster === 'CREATE_FAILURE') {\n    message.error('Failed to save the form.', [2]);\n    showToasterSuccess(dispatch);\n  }\n};\n\nconst dispatchAndRouteRequest = () => ({\n  type: DISPATCH_AND_ROUTE_REQUEST,\n});\n\nconst dispatchAndRouteSuccess = () => ({\n  type: DISPATCH_AND_ROUTE_SUCCESS,\n});\n\nconst dispatchAndRouteFailure = () => ({\n  type: DISPATCH_AND_ROUTE_FAILURE,\n});\n\n\nexport const dispatchAndRoute = (action, path, _params) => async dispatch => {\n  dispatch(dispatchAndRouteRequest());\n  try {\n    const res = await action();\n    dispatch(dispatchAndRouteSuccess());\n    if (_params) {\n      history.push({\n        pathname: path,\n        state: { res },\n      });\n    } else {\n      history.push(path);\n    }\n  } catch (error) {\n    console.log(error);\n    dispatch(dispatchAndRouteFailure());\n  }\n};\n","const INDEX_PAGE_SIZE_DEFAULT = 5;\nconst INDEX_PAGE_SIZE_OPTIONS = [];\nconst paginationMeta = {\n  page: 1,\n  pageSize: INDEX_PAGE_SIZE_DEFAULT,\n  pageSizeOptions: INDEX_PAGE_SIZE_OPTIONS,\n  pageTotal: 1,\n  total: 0,\n};\n\nexport default {\n  app: {\n    sidemenu: {\n      collapsed: false,\n    },\n    loading: false,\n    toaster: '',\n  },\n  counter: {\n    count: 0,\n    isIncrementing: false,\n    isDecrementing: false,\n  },\n  placeholder: {\n    loading: false,\n    list: [],\n    receivedAt: null,\n  },\n  study: {\n    loading: false,\n    list: {},\n  },\n  subject: {\n    list: {},\n    loading: true,\n  },\n  visit: {\n    list: {},\n    loading: false,\n  },\n  site: {\n    list: {},\n    loading: false,\n  },\n  studySite: {\n    loading: false,\n    list: {},\n    studySite: {},\n    isStale: false,\n  },\n  field: {\n    loading: false,\n    list: [],\n    receivedAt: null,\n    // data: [],\n    // field: {},\n  },\n  dashboard: {\n    zadeLoading: false,\n    barChartLoading: false,\n    barChartminiLoading: false,\n    doubleLoopPieLoading: false,\n    miniAreaChartLoading: false,\n    studyList: [],\n    totalSubjects: [],\n    receivedAt: null,\n    sitesCompliance: [],\n    formsCompliance: [],\n    dailySubmissionOfForms: [],\n    totalSubmissions: null,\n  },\n  subjectVisitForm: {\n    list: [],\n    loading: true,\n  },\n  crfData: {\n    list: [],\n    loading: true,\n  },\n  visitForm: {\n    list: {},\n    loading: false,\n  },\n  user: {\n    id: null,\n    token: null,\n    name: null,\n    userName: null,\n    userOrgId: '',\n    privileges: [],\n    isLicensee: false,\n    userOrgType: '',\n    canAccessMultipleSites: false,\n    userOrgName: '',\n    title: '',\n    loading: false,\n    email: '',\n    logo: '',\n  },\n  session: {\n    study: '',\n    subject: '',\n    visit: '',\n    visitOid: '',\n    client: '',\n    clientName: '',\n    site: '',\n    form: '',\n    fieldGroup: '',\n    studySite: '',\n    readOnly: false,\n  },\n  form: {\n    loading: false,\n    // data: [],\n    list: {},\n  },\n  fieldGroup: {\n    data: null,\n    list: {},\n    loading: false,\n  },\n  studyTemplate: {\n    loading: false,\n    list: {},\n  },\n  clientTemplate: {\n    loading: false,\n    list: {},\n  },\n  visitFormEvent: {\n    list: {},\n    loading: false,\n  },\n  studyCompliance: {\n    studyCompliance: {},\n    loading: false,\n  },\n  clientUser: {\n    list: {},\n    loading: false,\n  },\n  role: {\n    loading: false,\n    list: {},\n  },\n  crfVersion: {\n  },\n  tables: {\n    subjects: {\n      meta: {\n        page: 0,\n        pageSize: INDEX_PAGE_SIZE_DEFAULT,\n        pageSizeOptions: INDEX_PAGE_SIZE_OPTIONS,\n        pageTotal: 1,\n        total: 0,\n      },\n    },\n    subjectVisitForms: {\n      meta: {\n        page: 0,\n        pageSize: INDEX_PAGE_SIZE_DEFAULT,\n        pageSizeOptions: INDEX_PAGE_SIZE_OPTIONS,\n        pageTotal: 1,\n        total: 0,\n      },\n    },\n    auditTrail: {\n      meta: {\n        page: 0,\n        pageSize: INDEX_PAGE_SIZE_DEFAULT,\n        pageSizeOptions: INDEX_PAGE_SIZE_OPTIONS,\n        pageTotal: 1,\n        total: 0,\n      },\n    },\n    subjectMigration: {\n      meta: {\n        page: 1,\n        pageSize: 10,\n        pageSizeOptions: INDEX_PAGE_SIZE_OPTIONS,\n        pageTotal: 1,\n        total: 0,\n      },\n    },\n    crfVersion: {\n      meta: {\n        // ...paginationMeta,\n        page: 1,\n        pageSize: 5,\n        pageSizeOptions: INDEX_PAGE_SIZE_OPTIONS,\n        pageTotal: 1,\n        total: 0,\n      },\n    },\n    deployToProd: {\n      meta: {\n        page: 1,\n        pageSize: 10,\n        pageSizeOptions: INDEX_PAGE_SIZE_OPTIONS,\n        pageTotal: 1,\n        total: 0,\n      },\n    },\n    study: {\n      meta: {\n        page: 1,\n        pageSize: INDEX_PAGE_SIZE_DEFAULT,\n        pageSizeOptions: INDEX_PAGE_SIZE_OPTIONS,\n        pageTotal: 1,\n        total: 0,\n      },\n    },\n    versionInformation: {\n      meta: {\n        page: 1,\n        pageSize: INDEX_PAGE_SIZE_DEFAULT,\n        pageSizeOptions: INDEX_PAGE_SIZE_OPTIONS,\n        pageTotal: 1,\n        total: 0,\n      },\n    },\n    forms: {\n      meta: {\n        page: 1,\n        pageSize: INDEX_PAGE_SIZE_DEFAULT,\n        pageSizeOptions: INDEX_PAGE_SIZE_OPTIONS,\n        pageTotal: 1,\n        total: 0,\n      },\n    },\n    // users: {\n    //   meta: {\n    //     page: 1,\n    //     pageSize: INDEX_PAGE_SIZE_DEFAULT,\n    //     pageSizeOptions: INDEX_PAGE_SIZE_OPTIONS,\n    //     pageTotal: 1,\n    //     total: 0,\n    //   },\n    // },\n    clinicalData: {\n      meta: {\n        page: 1,\n        pageSize: INDEX_PAGE_SIZE_DEFAULT,\n        pageSizeOptions: INDEX_PAGE_SIZE_OPTIONS,\n        pageTotal: 1,\n        total: 0,\n      },\n    },\n  },\n};\n","import {\n    TOGGLE_SIDEMENU,\n    SHOW_TOASTER_SUCCESS,\n    DISPATCH_AND_ROUTE_REQUEST,\n    DISPATCH_AND_ROUTE_SUCCESS,\n    DISPATCH_AND_ROUTE_FAILURE,\n  } from '../actions/app';\n\n  import initialState from '../store/initialState';\n  \n  export default (state = initialState.app, action) => {\n    if (action.type.match(/CREATE.*_SUCCESS/)) {\n      return {\n        ...state,\n        toaster: 'CREATE_SUCCESS',\n      };\n    } if (action.type.match(/CREATE.*_FAILURE/)) {\n      return {\n        ...state,\n        toaster: 'CREATE_FAILURE',\n      };\n    }\n    if (action.type.match(/UPDATE.*_SUCCESS/)) {\n      return {\n        ...state,\n        toaster: 'UPDATE_SUCCESS',\n      };\n    } if (action.type.match(/UPDATE.*_FAILURE/)) {\n      return {\n        ...state,\n        toaster: 'UPDATE_FAILURE',\n      };\n    }\n  \n    switch (action.type) {\n      case TOGGLE_SIDEMENU:\n        return {\n          ...state,\n          sidemenu: {\n            collapsed: !state.sidemenu.collapsed,\n          },\n        };\n \n      case SHOW_TOASTER_SUCCESS:\n        return {\n          ...state,\n          toaster: null,\n        };\n      case DISPATCH_AND_ROUTE_REQUEST:\n        return {\n          ...state,\n          loading: true,\n        };\n      case DISPATCH_AND_ROUTE_SUCCESS:\n        return {\n          ...state,\n          loading: false,\n        };\n      case DISPATCH_AND_ROUTE_FAILURE:\n        return {\n          ...state,\n          loading: false,\n        };\n      default:\n        return state;\n    }\n  };\n  ","import { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk';\nimport createHistory from 'history/createBrowserHistory';\nimport createRootReducer from '../reducers';\nimport initialState from './initialState';\n\nexport const history = createHistory({\n  basename: process.env.PUBLIC_URL\n});\n\nconst enhancers = [];\nconst middleware = [thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === 'development') {\n  // eslint-disable-next-line no-underscore-dangle\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers,\n);\n\nexport default createStore(createRootReducer(history), initialState, composedEnhancers);\n","import React from 'react';\nimport { Editor } from 'react-draft-wysiwyg';\nimport PropTypes from 'prop-types';\nimport './chapter.less';\n\nclass RichTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    const {\n      onContentStateChange, onEditorStateChange, editorState,\n    } = this.props;\n    return (\n            <div>\n                <Editor\n                    editorState={editorState}\n                    toolbarClassName=\"home-toolbar\"\n                    wrapperClassName=\"home-wrapper\"\n                    toolbarOnFocus\n                    // toolbarHidden\n                    editorClassName=\"demo\"\n                    editorStyle= {{\n                      minHeight: '37px', borderRadius: '4px', overflow: 'auto', margin: '0px',\n                      lineHeight: '20px',\n                    }}\n                    // wrapperStyle = {stle}\n                    wrapperStyle = {{ marginTop: '-46px' }}\n                    // toolbarStyle = {{  }}\n                    toolbar={{\n                      options: ['inline', 'fontSize', 'fontFamily'],\n                      inline: {\n                        options: ['bold', 'italic', 'underline', 'superscript', 'subscript'],\n                        bold: { className: 'bordered-option-classname' },\n                        italic: { className: 'bordered-option-classname' },\n                        underline: { className: 'bordered-option-classname' },\n                        code: { className: 'bordered-option-classname' },\n                        superscript: { className: 'bordered-option-classname' },\n                        subscript: { className: 'bordered-option-classname' },\n                      },\n                      fontSize: {\n                        options: [8, 9, 10, 11, 12, 14, 16, 18, 24, 30, 36, 48, 60, 72, 96],\n                        className: 'bordered-option-classname',\n                      },\n                    }\n                    }\n                    onContentStateChange={onContentStateChange}\n                    onEditorStateChange={onEditorStateChange}\n                />\n            </div>\n    );\n  }\n}\nRichTextEditor.propTypes = {\n  onContentStateChange: PropTypes.func.isRequired,\n  onEditorStateChange: PropTypes.func.isRequired,\n  editorState: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default RichTextEditor;\n","import React, { Component } from 'react';\nimport { Button, Card, Col } from 'antd';\nimport PropTypes from 'prop-types';\nimport './chapter.less';\n\nclass Items extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      onHover: false,\n    };\n  }\n\n  // This method is used to handle the component to be rendered in modal\n  handleClick = (e, modalComponent, componentName) => {\n    const { showModal } = this.props;\n    showModal(modalComponent, componentName);\n  };\n\n  // empty handler to handle error\n  onKeyDown = () => {}\n\n  render() {\n    const {\n      modalComponent,\n      componentName,\n      index,\n      handleCancel,\n    } = this.props;\n    const { onHover } = this.state;\n    return (\n              <div className={`item ${onHover ? 'onHover' : ''}`}>\n                <Card className=\"item\" hoverable>\n{/* -----------------------------Tap to conig-----------------------------------  */}\n                  <Col span={21}>\n                    <div className=\"config\"\n                      onClick={e => this.handleClick(e, modalComponent, componentName) }\n                      onKeyDown={this.onKeyDown}\n                      role = \"button\"\n                    >\n                      Tap to configure&nbsp;{componentName}\n                    </div>\n                  </Col>\n{/* ------------------------------Delete Button-----------------------------------  */}\n                  <Col span={2} offset={1}>\n                    <Button\n                      type=\"danger\"\n                      title=\"Delete\"\n                      shape=\"circle\"\n                      icon= \"delete\"\n                      onClick={e => handleCancel(e, index)}\n                    />\n                  </Col>\n                </Card>\n              </div>\n    );\n  }\n}\n\nItems.propTypes = {\n  handleCancel: PropTypes.func.isRequired,\n  showModal: PropTypes.func.isRequired,\n  modalComponent: PropTypes.func.isRequired,\n  index: PropTypes.number.isRequired,\n  componentName: PropTypes.string.isRequired,\n};\n\nexport default Items;\n","import React, { Component } from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport {\n  Card, Form, Row, Col,\n  Button, Pagination, Icon, Popconfirm,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport RichTextEditor from './RichTextEditor';\nimport Items from './Items';\nimport './chapter.less';\n\nconst getTargetListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  // padding: grid,\n  // width: 250,\n  minHeight: '100%',\n  textAlign: 'center',\n});\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  // padding: grid * 2,\n  padding: 5,\n  // margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? 'lightgreen' : 'lightgrey',\n  // border: '1px solid',\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nclass Target extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reorderVisbility: false,\n    };\n  }\n\n  // This method sends changed page no. to parent class\n  onChange = pageNo => {\n    const { handlePageChange } = this.props;\n    handlePageChange(pageNo - 1);\n  };\n\n  // This method sets visibility for re-order button\n  setVisbility = () => {\n    this.setState(state => ({\n      reorderVisbility: !state.reorderVisbility,\n    }));\n  };\n\n  render() {\n    const {\n      pageItems,\n      handleCancel,\n      showModal,\n      form,\n      currentPageNo,\n      totalPages,\n      deletePage,\n      createNewPage,\n      movePageLeft,\n      movePageRight,\n      pageEditorState,\n      onPageEditorChange,\n      onPageEditorStateChange,\n    } = this.props;\n    const { reorderVisbility } = this.state;\n\n    let leftPageDisable = false;\n    let rightPageDisable = false;\n    let addPageDisable = true;\n\n    if (currentPageNo === 1) {\n      leftPageDisable = true;\n    }\n\n    if (currentPageNo === totalPages) {\n      rightPageDisable = true;\n      addPageDisable = false;\n    }\n\n    return (\n      <div style={{ minHeight: '85vh', paddingTop: 10 }}>\n        <Card style={{ minHeight: '85vh' }}>\n{/* ------------------------------Page Title-----------------------------------  */}\n          <Row>\n            <Col span={21}>\n              <Form.Item label=\"Page Name\">\n                {form.getFieldDecorator('pageTitle', {\n                  rules: [\n                    {\n                      max: 500,\n                      //   message: warningMessage,\n                    },\n                    {\n                      required: true,\n                      message: 'Please Enter Page Name',\n                    },\n                  ],\n                })(\n                  <RichTextEditor\n                    editorState={pageEditorState}\n                    onContentStateChange={onPageEditorChange}\n                    onEditorStateChange={onPageEditorStateChange}\n                  />,\n                )}\n              </Form.Item>\n            </Col>\n{/* ------------------------------Page Delete-----------------------------------  */}\n            <Col span={2} offset={1}>\n              <Popconfirm\n                title=\"Sure to delete page?\"\n                onConfirm={() => {\n                  deletePage(currentPageNo - 1);\n                }}\n              >\n                <Button\n                  title=\"Delete page\"\n                  type=\"danger\"\n                  icon=\"delete\"\n                  shape=\"circle\"\n                />\n              </Popconfirm>\n            </Col>\n          </Row>\n          <br />\n{/* ------------------------------Message-----------------------------------  */}\n          <Row className=\"droppedItems\">\n            <Droppable\n              droppableId=\"droppable2\"\n            >\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={getTargetListStyle(snapshot.isDraggingOver)}>\n                  {!_.isEmpty(pageItems)\n\n                    ? pageItems.map((item, index) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}>\n                      {(provided1, snapshot1) => (\n                        <div\n                          ref={provided1.innerRef}\n                          {...provided1.draggableProps}\n                          {...provided1.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot1.isDragging,\n                            provided1.draggableProps.style,\n                          )}>\n                          {/* {this.setContType(item.type, index, handleCancel, item)} */}\n                          <Items\n                            index = { index }\n                            handleCancel = { handleCancel }\n                            componentName = { item.type }\n                            modalComponent = { item.modalComponent }\n                            showModal = { showModal}\n                          />\n                        </div>\n                      )}\n                    </Draggable>\n                    ))\n                    : <div className=\"dndInstruction\">\n                  Drag and drop components <br />\n                  to add to this chapter\n                  <br />\n                </div>\n\n                          }\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          </Row>\n          <br />\n{/* ---------------------Footer with buttons and pagination---------------------  */}\n          <Row>\n            <Col span={2}>\n              <Button onClick={this.setVisbility}>Re-order</Button>\n            </Col>\n            <Col span={12} offset={1}>\n              {reorderVisbility ? (\n                <span>\n                  <Button\n                    disabled={leftPageDisable}\n                    onClick={() => movePageLeft()}\n                  >\n                    <Icon type=\"left\" />\n                  </Button>\n                  &nbsp;\n                  <Button\n                    disabled={rightPageDisable}\n                    onClick={() => movePageRight()}\n                  >\n                    <Icon type=\"right\" />\n                  </Button>\n                </span>\n              ) : (\n                ''\n              )}\n            </Col>\n            <Col span={2} offset={1}>\n              <Button disabled={addPageDisable} onClick={() => createNewPage()}>\n                Add Page\n              </Button>\n            </Col>\n            <Col span={5} offset={1} style={{ marginTop: 4 }}>\n              <Pagination\n                simple\n                defaultCurrent={1}\n                current={currentPageNo}\n                total={totalPages * 10}\n                onChange={pageNo => this.onChange(pageNo)}\n              />\n            </Col>\n          </Row>\n        </Card>\n      </div>\n    );\n  }\n}\n\n// const spec = {\n//   drop(props, monitor) {\n//     const item = monitor.getItem();\n//     props.onDrop(item);\n//     return item;\n//   },\n// };\n// const collect = connect => ({\n//   connectDropTarget: connect.dropTarget(),\n// });\n\nTarget.propTypes = {\n  selected: PropTypes.instanceOf(Array).isRequired,\n  connectDropTarget: PropTypes.func.isRequired,\n  pageItems: PropTypes.instanceOf(Array).isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  showModal: PropTypes.func.isRequired,\n  form: PropTypes.instanceOf(Object).isRequired,\n  createNewPage: PropTypes.func.isRequired,\n  deletePage: PropTypes.func.isRequired,\n  handlePageChange: PropTypes.func.isRequired,\n  currentPageNo: PropTypes.number.isRequired,\n  totalPages: PropTypes.number.isRequired,\n  movePageLeft: PropTypes.func.isRequired,\n  movePageRight: PropTypes.func.isRequired,\n  onPageEditorChange: PropTypes.func.isRequired,\n  onPageEditorStateChange: PropTypes.func.isRequired,\n  pageEditorState: PropTypes.instanceOf(Object).isRequired,\n};\n\n// syntax DropTarget( type, spec, collect )(component)\n// export default DropTarget('form-elements', spec, collect)(Target);\nexport default Target;\n","import React from 'react';\nimport { Card } from 'antd';\nimport { Editor } from 'react-draft-wysiwyg';\n// import { EditorState, convertToRaw } from 'draft-js';\nimport PropTypes from 'prop-types';\n\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport '../editor.less';\nclass RichTextEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n      }\n\n    imageUploadCallBack = file => new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', 'https://api.imgur.com/3/image');\n        xhr.setRequestHeader('Authorization', 'Client-ID 8d26ccd12712fca');\n        const data = new FormData();\n        data.append('image', file);\n        xhr.send(data);\n        xhr.addEventListener('load', () => {\n            const response = JSON.parse(xhr.responseText);\n            resolve(response);\n        });\n        xhr.addEventListener('error', () => {\n            const error = JSON.parse(xhr.responseText);\n            reject(error);\n        });\n    });\n\n    render() {\n        const {\n            onContentStateChange, onFocus, editorStateChange, editorState,\n          } = this.props;\n        return (\n            <div>\n                <Card>\n                    <Editor\n                        editorState={editorState}\n                        toolbarClassName=\"home-toolbar\"\n                        wrapperClassName=\"home-wrapper\"\n                        editorClassName=\"demo-editor\"\n                        toolbar={{\n                            options: ['inline', 'fontSize', 'fontFamily', 'list', 'colorPicker', 'remove', 'image', 'history'],\n                            inline: {\n                                options: ['bold', 'italic', 'underline', 'superscript', 'subscript'],\n                                bold: { className: 'bordered-option-classname' },\n                                italic: { className: 'bordered-option-classname' },\n                                underline: { className: 'bordered-option-classname' },\n                                code: { className: 'bordered-option-classname' },\n                                superscript: { className: 'bordered-option-classname' },\n                                subscript: { className: 'bordered-option-classname' },\n                            },\n                            image: {\n                                className: undefined,\n                                component: undefined,\n                                popupClassName: undefined,\n                                urlEnabled: true,\n                                uploadEnabled: true,\n                                alignmentEnabled: true,\n                                uploadCallback: this.imageUploadCallBack,\n                                previewImage: false,\n                                inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg',\n                                alt: { present: false, mandatory: false },\n                                defaultSize: {\n                                    height: 'auto',\n                                    width: 'auto',\n                                },\n                            },       \n                            fontSize: {\n                                // icon: fontSize,\n                                options: [8, 9, 10, 11, 12, 14, 16, 18, 24, 30, 36, 48, 60, 72, 96],\n                                className: 'bordered-option-classname',\n                            },\n                        }\n                        }\n                        onContentStateChange = {onContentStateChange}\n                        onEditorStateChange = {editorStateChange}\n                        onFocus={onFocus}\n                    />\n                </Card>\n            </div>\n        );\n    }\n}\nRichTextEditor.propTypes = {\n    onContentStateChange: PropTypes.func.isRequired,\n    onFocus: PropTypes.func.isRequired,\n    editorStateChange: PropTypes.func.isRequired,\n    editorState: PropTypes.instanceOf(Object).isRequired,\n  };\n\nexport default RichTextEditor;\n\n                               ","import React from 'react';\nimport {\n    Form, Row, Col, Input, Button, Modal, Card,\n} from 'antd';\nimport RichTextEditor from './RichTextEditor';\nimport PropTypes from 'prop-types';\nimport draftToHtml from 'draftjs-to-html';\nimport {\n    EditorState\n} from 'draft-js';\n// import htmlToDraft from 'html-to-draftjs';\n\nconst FormItem = Form.Item;\nlet lastFocused,\n    lastFocusedId,\n    modalLastFocused,\n    modalLastFocusedId,\n    paragraphTitle;\n\nclass EditTemplate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            previewModalVisible: false,\n            visible: true,\n            editorState: EditorState.createEmpty(),\n            ModalEditorState: EditorState.createEmpty(),\n        };\n    }\n\n    onEditorStateChange = (editorState) => {\n        this.setState({\n            editorState,\n        });\n    };\n\n    modalOnEditorStateChange = (ModalEditorState) => {\n        this.setState({\n            ModalEditorState,\n        });\n    };\n\n\n    onEditorChange = editorContent => {\n        const { form: { getFieldsValue, setFieldsValue } } = this.props;\n        const values = getFieldsValue();\n        const body = draftToHtml(editorContent).trim();\n        values.paragraphBody = body;\n        setFieldsValue(values);\n    };\n\n    modalOnEditorChange = editorContent => {\n        const { form: { getFieldsValue, setFieldsValue } } = this.props;\n        const values = getFieldsValue();\n        const body = draftToHtml(editorContent).trim();\n        values.modalParagraphBody = body;\n         setFieldsValue(values);\n    };\n\n    handleFocusEvent = e => {\n        lastFocused = document.activeElement;\n        lastFocusedId = e.target.id;\n    };\n    modalHandleFocusEvent = e => {\n        modalLastFocused = document.activeElement;\n        modalLastFocusedId = e.target.id;\n    };\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            paragraphTitle = values.title ;\n            if (!err) {\n                console.log('Received values of form: ',  values.paragraphBody );\n            }\n            console.log('Received values of form: ', values);\n            this.setState({\n                previewModalVisible: false,\n            })\n        });\n    }\n    handleModal = () => {\n        this.setState(prevState => ({\n            ...prevState,\n            previewModalVisible: !prevState.previewModalVisible,\n\n\n        }));\n    };\n    handleCancel = () => {\n        this.setState({ visible: false });\n    }\n    render() {\n        const { previewModalVisible, editorState, ModalEditorState } = this.state;\n        const { form: { getFieldDecorator } } = this.props;\n        const tailItemLayout = {\n            wrapperCol: {\n                sm: { span: 40 },\n            },\n\n        };\n        return (\n            <Card bordered>\n                <Form>\n                    <Form.Item\n                        label=\"Title\"\n                        labelCol={{ span: 7 }}\n                        wrapperCol={{ span: 10 }}\n                    >\n                        {getFieldDecorator('title', {\n                            rules: [{ required: false, message: 'Please input your note!' }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <FormItem\n                        label=\"Content\"\n                        labelCol={{ span: 5 }}\n                        wrapperCol={{ span: 14 }}\n                    >\n                        {getFieldDecorator('paragraphBody')(\n                            <RichTextEditor\n                                editorState={editorState}\n                                onContentStateChange={this.onEditorChange}\n                                onFocus={this.handleFocusEvent}\n                                editorStateChange={this.onEditorStateChange}\n                            />\n                        )}\n                    </FormItem>\n                    <Col offset={18} >\n                        <FormItem>\n                            {/* eslint-disable-next-line */}\n                            <a style={{ color: 'rgb(59, 165, 122)', paddingRight: '1%' }} onClick={() => this.handleModal()}>\n                                Add more\n                                 </a>\n                        </FormItem>\n                    </Col>\n                    <Row type=\"flex\" gutter={10} >\n                        <Col offset={10} >\n                            <FormItem {...tailItemLayout}\n                            >\n                                <Button type=\"default\" style={{ color: '#FE593D', marginRight: '3%' }}>\n                                    close\n                                </Button>\n                            </FormItem>\n                        </Col>\n                        <Col align=\"right\" >\n                            <FormItem {...tailItemLayout}>\n                                <Button type=\"primary\" htmlType=\"submit\" icon=\"check-circle\" onClick={this.handleSubmit}>\n                                    save\n                                </Button>\n                            </FormItem>\n                        </Col>\n                        <Modal\n                            width=\"70%\"\n                            visible={previewModalVisible}\n                            closable={false}\n                            onCancel={() => this.handleModal('previewModalVisible')}\n                            footer={<Button key=\"back\" onClick={this.handleSubmit}>Done</Button>}\n                            destroyOnClose\n                        >\n                            {getFieldDecorator('modalParagraphBody')(\n                                <RichTextEditor\n                                    editorState={ModalEditorState}\n                                    onContentStateChange={this.modalOnEditorChange}\n                                    onFocus={this.modalHandleFocusEvent}\n                                    editorStateChange={this.modalOnEditorStateChange}\n                                />\n                            )}\n                        </Modal>\n                    </Row>\n                </Form>\n            </Card>\n        );\n    }\n}\n\nEditTemplate.propTypes = {\n    form: PropTypes.instanceOf(Object).isRequired,\n    history: PropTypes.instanceOf(Object).isRequired,\n};\nexport default Form.create()(EditTemplate);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst ImagePreview = props => {\n  const {previewImage} = props;\n  return <img alt=\"Invalid\" style={{width: '100%'}} src={previewImage} type=\"image/png\" />;\n};\n\nImagePreview.defaultProps = {\n  previewImage:'',\n}\n\nImagePreview.propTypes = {\n  previewImage:PropTypes.string,\n}\n\nexport default ImagePreview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst AudioPreview = props => {\n  const {previewImage} = props;\n  return <audio src={previewImage} controls />;\n};\n\nAudioPreview.defaultProps = {\n  previewImage:'',\n}\n\nAudioPreview.propTypes = {\n  previewImage:PropTypes.string,\n}\nexport default AudioPreview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst VideoPreview = props => {\n  const {previewImage} = props;\n  return <video src={previewImage} controls />;\n};\n\nVideoPreview.defaultProps = {\n  previewImage:'',\n}\n\nVideoPreview.propTypes = {\n  previewImage:PropTypes.string,\n}\nexport default VideoPreview;\n","import React from 'react';\nimport ImagePreview from './imagePreview';\nimport AudioPreview from './audioPreview';\nimport VideoPreview from './videoPreview';\nimport PropTypes from 'prop-types';\n\n\nconst Preview = props => {\n    const {type,previewImage}=props;\n    if(type==='image') {\n        return <ImagePreview previewImage={previewImage}/>\n    } else if (type==='audio') {\n        return <AudioPreview previewImage={previewImage} />\n    } else if (type==='video') {\n        return <VideoPreview previewImage={previewImage} />\n    } else \n    return null;\n}\n\nPreview.defaultProps = {\n    type: '',\n    previewImage: '',\n}\n\nPreview.propTypes = {\n    type:PropTypes.string.isRequired,\n    previewImage:PropTypes.string,\n}\n\nexport default Preview;\n        \n        ","import React from 'react';\nimport {\n  Upload,\n  Icon,\n  Modal,\n  Button,\n  Popconfirm,\n  Input,\n  Row,\n  Col,\n  Form,\n  message,\n} from 'antd';\nimport Preview from './preview';\nimport PropTypes from 'prop-types';\n\nconst FormItem = Form.Item;\n\nconst InputArea = props => {\n  const {getFieldDecorator} = props;\n  return (\n    <FormItem>\n      {getFieldDecorator ('id', {}) (<Input placeholder=\"Enter URL...\" />)}\n    </FormItem>\n  );\n};\n\nclass UploadFile extends React.Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      previewVisible: false,\n      previewImage: '',\n      fileList: [],\n    };\n  }\n\n  handleCancel = () => this.setState ({previewVisible: false});\n\n  handlePreview = file => {\n    this.setState ({\n      previewImage: file.url || file.thumbUrl,\n      previewVisible: true,\n    });\n  };\n\n  handleChange = file => {\n    this.setState ({fileList: file.fileList});\n  };\n\n  handleClick = () => {\n    const val = this.props.form.getFieldValue ('id');\n    this.props.form.resetFields ();\n    const obj = {url: val, uid: Math.random ()};\n    const {fileList} = this.state;\n    fileList.push (obj);\n    this.setState ({fileList});\n    // console.log (val);\n  };\n\n  render () {\n    const {type} = this.props;\n    const {previewVisible, fileList, previewImage} = this.state;\n    const {getFieldDecorator} = this.props.form;\n\n    const uploadButton = (\n      <div>\n        <Icon type=\"plus\" />\n        <div>Upload File</div>\n      </div>\n    );\n\n    const uploadUrl = (\n      <div>\n        <Icon type=\"plus\" />\n        <div>Upload URL</div>\n      </div>\n    );\n\n    return (\n      <div>\n        <Row type=\"flex\" gutter={7}>\n          <Modal\n            visible={previewVisible}\n            footer={null}\n            onCancel={this.handleCancel}\n            width=\"50%\"\n            heigth=\"50%\"\n          >\n            <Preview type={type} previewImage={previewImage} />\n          </Modal>\n        </Row>\n        <Row type=\"flex\" gutter={7}>\n          <Upload\n            name=\"file\"\n            action=\"//jsonplaceholder.typicode.com/posts/\"\n            listType=\"picture-card\"\n            fileList={fileList}\n            onPreview={this.handlePreview}\n            onChange={this.handleChange}\n            multiple={true}\n          >\n            {uploadButton}\n          </Upload>\n          <Popconfirm\n            placement=\"topLeft\"\n            title={<InputArea getFieldDecorator={getFieldDecorator} />}\n            onConfirm={() => this.handleClick ()}\n            icon={<Icon />}\n          >\n            <Button\n              type=\"dashed\"\n              style={{height: '103px', backgroundColor: ''}}\n            >\n              {uploadUrl}\n            </Button>\n          </Popconfirm>\n\n        </Row>\n      </div>\n    );\n  }\n}\n\nUploadFile.defaultProps = {\n  type: 'image',\n};\n\nUploadFile.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nconst MediaInput = Form.create () (UploadFile);\n\nexport default MediaInput;\n","import Paragraph from '../paragraph/paragraph';\nimport UploadFile from '../Multimedia/uploadFile';\n\nconst PharseData = {\n  configData: [\n    {\n      type: 'icf',\n      label: 'ICF',\n      icon: 'fas fa-font',\n      id: 'ICF-001',\n      modalComponent: UploadFile,\n    },\n    {\n      type: 'paragraph',\n      label: 'Paragraph',\n      icon: 'fas fa-check-square',\n      id: 'paragraph-001',\n      modalComponent: Paragraph,\n    },\n    {\n      type: 'image',\n      label: 'Image',\n      icon: 'far fa-dot-circle',\n      id: 'image-001',\n      modalComponent: UploadFile,\n    },\n    {\n      type: 'audio',\n      label: 'Audio',\n      icon: 'fas fa-check',\n      id: 'audio-001',\n      modalComponent: UploadFile,\n    },\n    {\n      type: 'video',\n      label: 'Video',\n      icon: 'fas fa-check-double',\n      id: 'video-001',\n      modalComponent: UploadFile,\n    },\n    {\n      type: 'form',\n      label: 'Form',\n      icon: 'fas fa-check-double',\n      id: 'form-001',\n      modalComponent: UploadFile,\n    },\n    {\n      type: 'kr',\n      label: 'Knowledge Review',\n      icon: 'fas fa-check-double',\n      id: 'kr-001',\n      modalComponent: UploadFile,\n    },\n    {\n      type: 'attestation',\n      label: 'Attestation',\n      icon: 'fas fa-check-double',\n      id: 'attestation-001',\n      modalComponent: UploadFile,\n    },\n    {\n      type: 'signature',\n      label: 'Signature',\n      icon: 'fas fa-check-double',\n      id: 'signature-001',\n      modalComponent: UploadFile,\n    },\n  ],\n};\nexport default PharseData;\n","import React from 'react';\n// import { DragSource } from 'react-dnd';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { Card } from 'antd';\nimport PharseData from './Data';\n// import siderComponents from './SiderComponents';\nimport './chapter.less';\n\n// const components = Object.keys(siderComponents);\n\nconst grid = 5;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  // padding: grid * 2,\n  padding: 1,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? 'lightgreen' : 'white',\n  // border: '1px solid',\n\n  // styles we need to apply on draggables\n  ...draggableStyle,\n});\n\nclass Source extends React.Component {\n  state = {\n    items: PharseData.configData,\n  };\n\n  render() {\n    const { items } = this.state;\n    return (\n      <div>\n          {items.map((item, index) => (\n            <Draggable\n              key={item.id}\n              draggableId={item.id}\n              index={index}>\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  {...provided.draggableProps}\n                  {...provided.dragHandleProps}\n                  style={getItemStyle(\n                    snapshot.isDragging,\n                    provided.draggableProps.style,\n                  )}>\n                  <Card hoverable\n                    style={{\n                      background: snapshot.isDragging ? 'lightgreen' : 'white',\n                      border: snapshot.isDragging ? '1px lightgreen' : '1px solid #e4e2e2',\n                      // userSelect: 'none',\n                      // padding: 5,\n                      // margin: `0 0 ${grid}px 0`,\n                    }}\n                    bodyStyle={{ padding: '6%' }}\n                  >\n                  <i className={item.icon} />\n                  <span data-type={item.type} className=\"pan-text\">{item.label}</span>\n                  </Card>\n                </div>\n              )}\n              </Draggable>\n          ))}\n      </div>\n    );\n  }\n}\n\n// const spec = {\n//   beginDrag(props) {\n//     const item = { ...props };\n//     return item;\n//   },\n// };\n\n// const collect = (connect, monitor) => ({\n//   connectDragSource: connect.dragSource(),\n//   isDragging: monitor.isDragging(),\n// });\n\n// syntax DragSource( type, spec, collect )(component)\n// const ListItem = DragSource('form-elements', spec, collect)(props => {\n//   const { connectDragSource, component } = props;\n// return connectDragSource(<div>\n// {/* <Card hoverable className=\"sourcelist\">&nbsp;<b>{component}</b></Card> */}\n// </div>\n// );\n// });\n\nexport default Source;\n","import React, { Component } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport {\n  Layout, Card, Form, Col, Icon, Button, Modal,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport draftToHtml from 'draftjs-to-html';\nimport {\n  EditorState,\n} from 'draft-js';\nimport RichTextEditor from './RichTextEditor';\nimport Target from './ChapterTarget';\nimport Source from './ChapterSource';\nimport PharseData from './Data';\n\nconst { Content, Sider } = Layout;\n\nconst formItemLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 },\n};\n\nconst grid = 10;\nconst getSourceListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : 'white',\n  padding: grid,\n  // width: 250,\n});\n\nconst rightPan = (count, offset = 0) => Array.from({ length: count }, (v, k) => k).map(k => ({\n  id: `right-${k + offset}`,\n  label: `right ${k + offset}`,\n}));\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n/**\n * Moves an item from one list to another list.\n */\nlet newID = 0;\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(PharseData.configData);\n  const destClone = Array.from(destination);\n  // const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  const droppableDestinationProp = PharseData.configData[droppableSource.index];\n  const add = {\n    id: `${droppableDestinationProp.label}_${newID}`,\n    type: droppableDestinationProp.type,\n    modalComponent: droppableDestinationProp.modalComponent,\n  };\n  destClone.splice(droppableDestination.index, 0, add);\n  newID += 1;\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nclass CreateChapter extends Component {\n  id2List = {\n    droppable: 'items',\n    droppable2: 'pageItems',\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      selected: rightPan(),\n      modalVisibility: false,\n      modalComponent: '',\n      componentName: '',\n      currentPageNo: 0,\n      chapterEditorState: EditorState.createEmpty(),\n      pageEditorState: EditorState.createEmpty(),\n      pages: [\n        {\n          title: '',\n          pageItems: [],\n        },\n      ],\n    };\n  }\n\n  // getList = id => this.state[this.id2List[id]];\n\n  getList = () => {\n    const { pages, currentPageNo } = this.state;\n    return pages[currentPageNo].pageItems;\n  }\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n    const { currentPageNo, pages } = this.state;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      if (source.droppableId === 'droppable') {\n        return;\n      }\n\n      if (source.droppableId === 'droppable2') {\n        const items = reorder(\n          this.getList('droppable2'),\n          // this.getList(source.droppableId),\n          source.index,\n          destination.index,\n        );\n        // console.log(items);\n\n        pages[currentPageNo].pageItems = items;\n        this.setState(prevState => ({\n          ...prevState,\n          pages,\n        }));\n\n        // let state = { items };\n        // state = { selected: items };\n        // this.setState(state);\n      }\n    } else {\n      if (destination.droppableId === 'droppable') {\n        return;\n      }\n      const result1 = move(\n        this.getList(source.droppableId),\n        // this.getList(destination.droppableId),\n        pages[currentPageNo].pageItems,\n        source,\n        destination,\n        // pages[currentPageNo].pageItems,\n      );\n\n      // this.setState({\n      //   items: result1.droppable,\n      //   selected: result1.droppable2,\n      // }, () => console.log(this.state.selected));\n\n\n      pages[currentPageNo].pageItems = result1.droppable2;\n      this.setState(prevState => ({\n        ...prevState,\n        pages,\n      }));\n    }\n  };\n\n  // This method will set items that are dropped on target to respective page.\n  onDrop = component => {\n    const { currentPageNo, pages } = this.state;\n    const newComponentsList = _.concat(\n      [],\n      pages[currentPageNo].pageItems,\n      component,\n    );\n    pages[currentPageNo].pageItems = newComponentsList;\n    this.setState(prevState => ({\n      ...prevState,\n      pages,\n    }));\n  };\n\n  // This method is used to delete the rendered cards\n  handleCancel = (e, index) => {\n    const { currentPageNo, pages } = this.state;\n    const newComponent = pages[currentPageNo].pageItems.slice();\n    newComponent.splice(index, 1);\n    pages[currentPageNo].pageItems = newComponent;\n    this.setState(prevState => ({\n      ...prevState,\n      pages,\n    }));\n\n    // const { selected } = this.state;\n    // const newComponent1 = selected.slice();\n    // newComponent1.splice(index, 1);\n    // this.setState(prevState => ({\n    //   ...prevState,\n    //   selected: newComponent1,\n    // }));\n  };\n\n  // This method is used to set the indexes of moved cards\n  moveCard = (oldIndex, newIndex) => {\n    const { currentPageNo, pages } = this.state;\n    const component = _.concat([], pages[currentPageNo].pageItems);\n    _.remove(component, (n, index) => {\n      if (index === oldIndex) {\n        return true;\n      }\n      return false;\n    });\n    const componentToMove = pages[currentPageNo].pageItems[oldIndex];\n    if (oldIndex < newIndex) {\n      // 2 to 4\n      const modifiedNewIndex = newIndex;\n      component.splice(modifiedNewIndex, 0, componentToMove);\n    } else if (oldIndex > newIndex) {\n      // 4 to 2\n      component.splice(newIndex, 0, componentToMove);\n    } else if (oldIndex === newIndex) {\n      return;\n    }\n    pages[currentPageNo].pageItems = component;\n    this.setState(prevState => ({\n      ...prevState,\n      pages,\n    }));\n  };\n\n  // This method sets the respective card component to the modal.\n  showModal = (modalComponent, componentName) => {\n    this.setState({\n      modalVisibility: true,\n      modalComponent,\n      componentName,\n    });\n  };\n\n  // This method hides the modal window.\n  hideModal = () => {\n    this.setState({\n      modalVisibility: false,\n    });\n  };\n\n  // This method creates new page for the chapter and moves to that chapter\n  createNewPage = () => {\n    const newPage = [\n      {\n        component: Target,\n        title: '',\n        pageItems: [],\n      },\n    ];\n    const { pages } = this.state;\n    this.setState({\n      pages: _.concat(pages, newPage),\n      currentPageNo: pages.length,\n    });\n  };\n\n  // This method moves to changed page\n  handlePageChange = currentPageNo => {\n    this.setState({\n      currentPageNo,\n    });\n  };\n\n  // This method is used to swap the page to its left\n  movePageLeft = () => {\n    const { currentPageNo, pages } = this.state;\n    const loPage1 = pages[currentPageNo - 1];\n    pages[currentPageNo - 1] = pages[currentPageNo];\n    pages[currentPageNo] = loPage1;\n    this.setState(prevState => ({\n      ...prevState,\n      pages,\n      currentPageNo: currentPageNo - 1,\n    }));\n  };\n\n  // This method is used to swap the page to its right\n  movePageRight = () => {\n    const { currentPageNo, pages } = this.state;\n    const loPage1 = pages[currentPageNo + 1];\n    pages[currentPageNo + 1] = pages[currentPageNo];\n    pages[currentPageNo] = loPage1;\n    this.setState(prevState => ({\n      ...prevState,\n      pages,\n      currentPageNo: currentPageNo + 1,\n    }));\n  };\n\n  // method to delete page\n  deletePage = pageNo => {\n    const { pages } = this.state;\n    let newArray = _.filter(pages, (obj, index) => index !== pageNo);\n    let newPageNo;\n    if (pageNo === 0) {\n      newPageNo = 0;\n      if (pages.length === 1) {\n        newArray = [\n          {\n            component: Target,\n            title: '',\n            pageItems: [],\n          },\n        ];\n      }\n    } else {\n      newPageNo = pageNo - 1;\n    }\n    this.setState(prevState => ({\n      ...prevState,\n      pages: newArray,\n      currentPageNo: newPageNo,\n    }));\n  }\n\n  // method to set get field decorator of chapter rich text editor\n  onChapterEditorChange = editorContent => {\n    const { form: { getFieldsValue, setFieldsValue } } = this.props;\n    const values = getFieldsValue();\n    const body = draftToHtml(editorContent).trim();\n    values.chapterTitle = body;\n    setFieldsValue(values);\n  };\n\n  // method to set state of chapter editor\n  onChapterEditorStateChange = (editorState) => {\n    this.setState({\n      chapterEditorState: editorState,\n    });\n  };\n\n  // method to set get field decorator of page rich text editor\n  onPageEditorChange = editorContent => {\n    const { form: { getFieldsValue, setFieldsValue } } = this.props;\n    const values = getFieldsValue();\n    const body = draftToHtml(editorContent).trim();\n    values.pageTitle = body;\n    setFieldsValue(values);\n  };\n\n  // method to set state of page editor\n  onPageEditorStateChange = (editorState) => {\n    this.setState({\n      pageEditorState: editorState,\n    });\n  };\n\n  render() {\n    const {\n      selected,\n      modalVisibility,\n      modalComponent,\n      componentName,\n      pages,\n      currentPageNo,\n      chapterEditorState,\n      pageEditorState,\n    } = this.state;\n    const Val = modalComponent;\n    const { pageItems } = pages[currentPageNo];\n    const totalPages = pages.length;\n    const { form } = this.props;\n    return (\n      <div>\n        <Form layout=\"inline\" onSubmit={this.handleSubmit} >\n          <Layout style={{ padding: '15px' }}>\n{/* ------------------------------Sider Draggable Items-----------------------------------  */}\n        <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable\n          droppableId=\"droppable\"\n          // isDropDisabled={this.state.dropDisabled}\n        >\n          {(provided, snapshot) => (\n            <Card bordered={false} style={{ background: 'slategray' }}>\n            <Sider theme=\"light\">\n            <div\n              ref={provided.innerRef}\n              style={getSourceListStyle(snapshot.isDraggingOver)}>\n                <Source/>\n              {provided.placeholder}\n            </div>\n            </Sider>\n            </Card>\n          )}\n        </Droppable>\n\n            <Content style={{ marginLeft: 10, overflowX: 'inherit' }}>\n                <Card>\n{/* ------------------------------Chapter Title Input Box-----------------------------------  */}\n                  <Col span={21}>\n                    <Form.Item label=\"Chapter\" {...formItemLayout}>\n                      {form.getFieldDecorator('chapterTitle', {\n                        rules: [\n                          {\n                            max: 500,\n                            //   message: warningMessage,\n                          },\n                          {\n                            required: true,\n                            message: 'Please Enter Chapter title',\n                          },\n                        ],\n                      })(<RichTextEditor\n                        editorState={chapterEditorState}\n                        onContentStateChange={this.onChapterEditorChange}\n                        onEditorStateChange={this.onChapterEditorStateChange}\n                    />)}\n                    </Form.Item>\n                  </Col>\n{/* ------------------------------Total Save Button-----------------------------------  */}\n                  <Col span={2} offset={1}>\n                    <Form.Item>\n                      <Button>\n                        <Icon type=\"save\" />\n                      </Button>\n                    </Form.Item>\n                  </Col>\n                </Card>\n{/* ------------------------------Target Container-----------------------------------  */}\n              {/* <Droppable\n                droppableId=\"droppable2\"\n              >\n                {(provided, snapshot) => (\n                   <div\n                   ref={provided.innerRef}\n                   style={getTargetListStyle(snapshot.isDraggingOver)}>\n                   <Target\n                      selected={selected}\n                      onDrop={this.onDrop}\n                      pageItems={pageItems}\n                      moveCard={this.moveCard}\n                      handleCancel={this.handleCancel}\n                      showModal={this.showModal}\n                      form={form}\n                      currentPageNo={currentPageNo + 1}\n                      totalPages={totalPages}\n                      createNewPage={this.createNewPage}\n                      handlePageChange={this.handlePageChange}\n                      movePageLeft={this.movePageLeft}\n                      movePageRight={this.movePageRight}\n                      deletePage={this.deletePage}\n                      pageEditorState={pageEditorState}\n                      onPageEditorChange={this.onPageEditorChange}\n                      onPageEditorStateChange={this.onPageEditorStateChange}\n                    />\n                   {provided.placeholder}\n                 </div>\n                )}\n              </Droppable> */}\n              <Target\n                 selected={selected}\n                 onDrop={this.onDrop}\n                 pageItems={pageItems}\n                 moveCard={this.moveCard}\n                 handleCancel={this.handleCancel}\n                 showModal={this.showModal}\n                 form={form}\n                 currentPageNo={currentPageNo + 1}\n                 totalPages={totalPages}\n                 createNewPage={this.createNewPage}\n                 handlePageChange={this.handlePageChange}\n                 movePageLeft={this.movePageLeft}\n                 movePageRight={this.movePageRight}\n                 deletePage={this.deletePage}\n                 pageEditorState={pageEditorState}\n                 onPageEditorChange={this.onPageEditorChange}\n                 onPageEditorStateChange={this.onPageEditorStateChange}\n               />\n                {/* <Droppable\n              droppableId=\"droppable2\"\n            >\n              {(provided, snapshot) => (\n                <div\n                  ref={provided.innerRef}\n                  style={getTargetListStyle(snapshot.isDraggingOver)}>\n                  {selected.map((item, index) => (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}>\n                      {(provided1, snapshot1) => (\n                        <div\n                          ref={provided1.innerRef}\n                          {...provided1.draggableProps}\n                          {...provided1.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot1.isDragging,\n                            provided1.draggableProps.style,\n                          )}>\n                          {this.setContType(item.type)}\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable> */}\n{/* ------------------------------Modal Window-----------------------------------  */}\n                <Modal\n                  title={componentName}\n                  visible={modalVisibility}\n                  onOk={this.hideModal}\n                  onCancel={this.hideModal}\n                  width={1000}\n                  style={{ top: '20px' }}\n                >\n                  <Val type={componentName}/>\n                </Modal>\n            </Content>\n          </DragDropContext>\n          </Layout>\n        </Form>\n      </div>\n    );\n  }\n}\n\nCreateChapter.propTypes = {\n  form: PropTypes.instanceOf(Object).isRequired,\n};\n\nconst CreateChapterForm = Form.create()(CreateChapter);\n// const WrapperApp = DragDropContext(HTML5Backend)(CreateChapterForm);\nexport default CreateChapterForm;\n","import React, { Component } from 'react';\nimport CreateChapter from './components/chapter/CreateChapter';\n// import './App.css';\n\nclass App extends Component {\n  state={}\n\n  render() {\n    return (\n      <div className=\"App\">\n      {/* <Button type=\"primary\">Button</Button> */}\n      <CreateChapter/>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router'\nimport {\n  Route, Switch,\n} from 'react-router-dom';\nimport configureStore, { history } from './store/configureStore';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst target = document.querySelector('#root');\n\nReactDOM.render(\n  <Provider store={configureStore}>\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path=\"/\" component={App} />\n        </Switch>\n    </ConnectedRouter>\n  </Provider>,\n  target,\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}